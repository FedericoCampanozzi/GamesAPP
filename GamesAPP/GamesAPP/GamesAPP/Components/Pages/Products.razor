@page "/products"
@inject IProductService ProductService
@attribute [StreamRendering(true)]

<Authentication PageToRedirect="products" />

@if (products == null)
{
	<span>Loading...</span>	
}
else if (products.Count == 0)
{
	<span>No products found.</span>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>#ID</th>
				<th>Name</th>
				<th>Description</th>
				<th>Date</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var product in products)
			{
				<tr>
					<td>@product.Id</td>
					<td>@product.Name</td>
					<td>@product.Description</td>
					<td>@product.CreatedAt.ToString("dd MMM yyyy")</td>
					<td>
						<ProductButtonCaller SIDChange="UPDATE" Id="@product.Id" />
						<ProductButtonCaller SIDChange="DELETE" Id="@product.Id" />
					</td>
				</tr>
			}
		</tbody>
	</table>
}

<div class="add-btn">
	<ProductButtonCaller SIDChange="CREATE" Id="-1" />
</div>

@code {
	List<Product>? products = null;

	protected override async Task OnInitializedAsync()
	{
		products = await ProductService.GetAllProducts();
	}
}