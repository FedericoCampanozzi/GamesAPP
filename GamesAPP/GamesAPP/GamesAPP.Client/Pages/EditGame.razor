@page "/edit-game"
@page "/edit-game/{id:int}"
@inject IGameService GameService
@inject NavigationManager NavigationManager
@rendermode InteractiveAuto

@if (Id == null)
{
	<h3>Create Game</h3>
}
else
{
	<h3>Edit @game.Name</h3>
}

<EditForm Model="game" OnSubmit="HandlerSubmit">
	<label>Name:</label>
	<InputText @bind-Value="game.Name">@game.Name</InputText>
	<button type="submit" class="btn btn-primary small-btn">Submit</button>
	@if(Id != null)
	{
		<button @onclick="DeleteGame" type="button" class="btn btn-danger small-btn">Delete</button>
	}
</EditForm>

@code {
	[Parameter]
	public int? Id { get; set; }
	Game game { get; set; }  = new Game { Name = string.Empty, CreatedAt = new DateTime() };

	protected override async Task OnParametersSetAsync()
	{
		if(Id != null)
		{
			game = await GameService.GetGameById((int)Id);	
		}
	}

	async Task HandlerSubmit()
	{
		if(Id == null)
		{
			await GameService.AddGame(game);
		}
		else
		{
			await GameService.EditGame((int)Id, game);
		}
		NavigationManager.NavigateTo("/games");
	}

	async Task DeleteGame()
	{
		await GameService.DeleteGame((int)Id);
		NavigationManager.NavigateTo("/games");
	}
}