@page "/order"

@rendermode InteractiveServer
@inject IOrderService OrderService

@if (AuthenticationService.UserAuthenticated?.Role == "User")
{
	<table class="table">
		<thead>
			<tr>
				<th>#ID</th>
				<th>Date</th>
				<th>Product Name</th>
				<th>UserName</th>
				<th>Quantity</th>
			</tr>
		</thead>
		<tbody>
			@foreach (Order order in orders)
			{
				<tr>
					<td>@order.Id</td>
					<td>@order.CreatedAt.ToString("dd MMM yyyy")</td>
					<td>@order.Product?.Name</td>
					<td>@order.User?.UserName</td>
					<td>@order.Quantity</td>
				</tr>
			}
		</tbody>
	</table>
}
else if (AuthenticationService.UserAuthenticated?.Role == "Store")
{
	<table class="table">
		<thead>
			<tr>
				<th>#ID</th>
				<th>Date</th>
				<th>Product Name</th>
				<th>UserName</th>
				<th>Warehouse</th>
				<th>Quantity</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (Order order in orders)
			{
				<tr>
					<td>@order.Id</td>
					<td>@order.CreatedAt.ToString("dd MMM yyyy")</td>
					<td>@order.Product?.Name</td>
					<td>@order.User?.UserName</td>
					<td>@order.Warehouse?.Address</td>
					<td>@order.Quantity</td>
					<td>
						@if (order.Warehouse != null)
						{
							<ButtonCaller Prefab="ORDER_PER_WAREHOUSE" Id="@order.Warehouse.Id" />
						}
					</td>
				</tr>
			}
		</tbody>
	</table>
}

<div class="add-btn">
	<ButtonCaller Prefab="CREATE_ORDER" />
</div>

@code {
	List<Order> orders = new List<Order>();

	protected override async Task OnInitializedAsync()
	{
		List<Order> ord = await OrderService.GetAllOrder();

		if (AuthenticationService.UserAuthenticated?.Role == "User")
			orders = ord.Where(o => o.User != null && o.User.Id == AuthenticationService.UserAuthenticated?.Id).ToList();
		else
			orders = new List<Order>(ord);
		/*
		foreach (Order o in orders)
			Console.Write(o.Id + ";");
		*/
	}
}
